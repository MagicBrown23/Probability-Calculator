<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>AACAAN CODE3 (Memorandum)</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 2em;
      max-width: 500px;
      margin: auto;
    }
    label, input, button {
      display: block;
      width: 100%;
      margin-bottom: 1em;
      font-size: 1em;
    }
    input, button {
      padding: 0.5em;
    }
    #bottomCardInput {
      transition: all 0.3s ease;
    }
    .hidden {
      visibility: hidden;
      height: 0;
      padding: 0;
      margin: 0;
    }
  </style>
</head>
<body>
  <h2>AACAAN CODE3</h2>
  <label for="namedCard">Named Card (e.g. 6♥)</label>
  <input type="text" id="namedCard" placeholder="e.g. 6♥ or 6h" />

  <label for="namedNumber">Named Number (1–52)</label>
  <input type="number" id="namedNumber" min="1" max="52" />

  <label for="bottomCard" id="bottomCardLabel">Bottom Card (e.g. 10♥)</label>
  <input type="text" id="bottomCardInput" placeholder="e.g. 10♥ or 10h" />

  <button onclick="calculate()">Calculate</button>
  <p id="result"></p>

  <script>
    const memorandumStack = [
      "J♠", "7♣", "10♥", "A♦", "4♣", "7♥", "4♦", "A♠", "4♥", "7♦",
      "4♠", "A♥", "10♦", "7♠", "J♣", "K♦", "10♠", "8♣", "J♥", "A♣",
      "K♠", "5♣", "8♥", "2♦", "Q♠", "K♥", "9♣", "Q♥", "6♣", "9♥",
      "2♦", "3♣", "6♥", "5♦", "2♠", "3♥", "8♦", "5♠", "K♣", "J♦",
      "8♠", "10♣", "2♣", "5♥", "6♦", "3♠", "2♥", "9♦", "6♠", "Q♣",
      "Q♦", "9♠"
    ];

    function normalize(card) {
      card = card.toUpperCase().replace(/HEARTS?|H/g, "♥")
        .replace(/DIAMONDS?|D/g, "♦")
        .replace(/CLUBS?|C/g, "♣")
        .replace(/SPADES?|S/g, "♠");
      return card.replace(/\s+/g, "");
    }

    function getCardPosition(card) {
      card = normalize(card);
      return memorandumStack.findIndex(c => normalize(c) === card) + 1;
    }

    function getCardFromPosition(pos) {
      return memorandumStack[pos - 1];
    }

    function getSecretCode(card) {
      const suitMap = {"♦":1, "♣":2, "♥":3, "♠":4};
      const rankMap = {
        "A":1, "J":11, "Q":12, "K":13,
        "10":10, "9":9, "8":8, "7":7, "6":6,
        "5":5, "4":4, "3":3, "2":2
      };

      const match = card.match(/(10|[2-9AJQK])([♦♣♥♠])/);
      if (!match) return 0;
      const rank = rankMap[match[1]];
      const suit = suitMap[match[2]];
      return suit * 100 + rank;
    }

    function calculate() {
      const namedCard = document.getElementById("namedCard").value;
      const namedNumber = parseInt(document.getElementById("namedNumber").value);
      const bottomCardInput = document.getElementById("bottomCardInput");
      const bottomCard = bottomCardInput.value;

      // Hide bottom card input
      bottomCardInput.classList.add("hidden");
      document.getElementById("bottomCardLabel").classList.add("hidden");

      const namedCardPos = getCardPosition(namedCard);
      const targetPos = namedCardPos - namedNumber;
      const targetCard = getCardFromPosition(((targetPos - 1 + 52) % 52) + 1);

      const bottomCardPos = getCardPosition(bottomCard);
      let cutAmount = targetPos - bottomCardPos;
      while (cutAmount < 0) cutAmount += 52;

      const secretCode = getSecretCode(targetCard);

      document.getElementById("result").innerText =
        `The probability of your card in that position is 0.${cutAmount.toString().padStart(2, '0')}% and only ${secretCode} out of 10000 people have named this combination.`;
    }
  </script>
</body>
</html>
